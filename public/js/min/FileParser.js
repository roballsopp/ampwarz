"use strict";function getEndianness(){var e=new ArrayBuffer(2);(new DataView(e)).setInt16(0,256,true);return(new Int16Array(e))[0]===256}function assembleInt(e,t,n,r){var i=0;if(r){var s=e;while(s){s--;i<<=8;i|=t[n+s]}}else{var s=0;while(s<e){i<<=8;i|=t[n+s];s++}}i<<=(4-e)*8;return i}function disassembleInt(e,t,n,r,i){if(!i){var s=e;while(s){s--;n.setUint8(r+s,t&255);t>>=8}}else{var s=0;while(s<e){n.setUint8(r+s,t&255);t>>=8;s++}}}function decode(e,t){worker.postMessage({type:"status",message:"Decoding wav file..."});var n={};var r=new FileReaderSync;var i=r.readAsArrayBuffer(e);var s=i.byteLength<1e4?i.byteLength:1e4;var o=new Uint8Array(i,0,s);var u="";for(var a=0;a<s;a++){u+=String.fromCharCode(o[a])}var f=u.search("RIFF");var l=u.search("fmt ");var c=u.search("data");var h=new DataView(i,f,12);var p=new DataView(i,l,24);var d=new DataView(i,c,8);var v=h.getUint32(0,false);var m=h.getUint32(4,true);var g=h.getUint32(8,false);var y=p.getUint32(0,false);var b=p.getUint32(4,true);var w=p.getUint16(8,true);var E=p.getUint16(10,true);var S=p.getUint32(12,true);var x=p.getUint32(16,true);var T=p.getUint16(20,true);var N=p.getUint16(22,true);var C=d.getUint32(0,false);var k=d.getUint32(4,true);if(1380533830!=v){worker.postMessage({type:"error",message:"Not a RIFF file"});return}if(1463899717!=g){worker.postMessage({type:"error",message:"Not a WAVE file"});return}if(S<4e4){worker.postMessage({type:"error",message:"Sample rate is below 40000"});return}if(1!=w&&3!=w){worker.postMessage({type:"error",message:"Unrecognized data format"});return}n.sampleRate=S;n.channels=E;n.X=[];var L=Math.round(N/8);var A=k/E/L;var O=Math.pow(2,4*8-1);if(w==3){var M=new DataView(i,c+8,k);for(var _=0;_<E;_++){n.X[_]=new Float32Array(A);for(var D=0;D<A;D++){n.X[_][D]=M.getFloat32((D*E+_)*L,isLittleEndian)}}}else{var M=new Uint8Array(i,c+8,k);for(var _=0;_<E;_++){n.X[_]=new Float32Array(A);for(var D=0;D<A;D++){var P=(D*E+_)*L;n.X[_][D]=assembleInt(L,M,P,isLittleEndian)/O}}}worker.postMessage({type:"status",message:"Decoding complete."});n=deconstruct(n);worker.postMessage({type:"signal",id:t,signal:n},getBufferList(n))}function encode(e,t,n){worker.postMessage({type:"status",message:"Encoding wav file..."});var r=e.X[0].length;var i=t/8;var s=r*e.channels*i;var o=new ArrayBuffer(44+s);var u=new DataView(o);u.setUint32(0,1179011410,true);u.setUint32(4,36+s,true);u.setUint32(8,1163280727,true);u.setUint32(12,544501094,true);u.setUint32(16,16,true);u.setUint16(20,1,true);u.setUint16(22,e.channels,true);u.setUint32(24,e.sampleRate,true);u.setUint32(28,e.sampleRate*e.channels*(t/8),true);u.setUint16(32,e.channels*(t/8),true);u.setUint16(34,t,true);u.setUint32(36,1635017060,true);u.setUint32(40,s,true);var a,f,l;var c=Math.pow(2,t-1)-1;var h=-Math.pow(2,t-1);var p=Math.pow(2,t-1);for(var d=0;d<r;d++){for(var v=0;v<e.channels;v++){a=Math.round(e.X[v][d]*p);if(a>c){f=c}else if(a<h){f=h}else{f=a}l=44+(d*e.channels+v)*i;disassembleInt(i,f,u,l,isLittleEndian)}}var m=new Blob([u],{type:"audio/wav"});worker.postMessage({type:"status",message:"Encoding complete."});worker.postMessage({type:"file",id:n,file:m})}importScripts("signalCom.js");var isLittleEndian=getEndianness();var worker=this;this.onmessage=function(e){var t=e.data.command;switch(t){case"decode":decode(e.data.file,e.data.id);break;case"encode":var n=reconstruct(e.data.signal);encode(n,e.data.bitDepth,e.data.id);break;default:worker.postMessage({type:"error",message:"Command not recognized"});break}}